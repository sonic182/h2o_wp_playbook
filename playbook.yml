---
- hosts: all
  vars_files:
    - ./vars.yml
  gather_facts: no

  pre_tasks:
    - name: 'install {{local_python}}'
      raw: apt-get update && apt-get -y install "{{local_python}}" rsync

  tasks:
  - name: Gathering facts
    setup:

  - name: Create a directory if it does not exist
    file:
      path: "{{path_for_files}}/"
      state: directory
      mode: '0755'

  - name: Sync wordpress folder
    synchronize:
      src: ./wordpress/
      dest: "{{path_for_files}}/"

  - name: Get wordpress Salts
    uri:
      url: https://api.wordpress.org/secret-key/1.1/salt/
      return_content: yes
    register: wp_salts

  - name: Copy wp-config
    template:
      src: ./files/wp-config.php.j2
      dest: "{{path_for_files}}/wp-config.php"
    vars:
      salt_vars: "{{wp_salts.content}}"

  - name: Ensure python apt present
    apt:
      name: "{{local_python}}-apt"

  - name: Add certbot ppa if ubuntu
    apt_repository:
      repo: ppa:certbot/certbot
    when: ansible_facts['distribution'] == "Debian" and ansible_facts['distribution_major_version'] == "18"

  - name: Install dependencies
    apt:
      name: "{{ packages }}"
    vars:
      packages:
      - certbot
      - h2o
      - mariadb-server
      - php-curl
      - php-fpm
      - php-memcache
      - php-tidy
      - php-mysql
      - python-mysqldb  # sometimes python3-mysqldb doesn't work...
      - python3-mysqldb
      - python3-jsmin
      - memcached

  - name: Get php version in var
    shell: php -v | grep -oP 'PHP \d.\d' |awk '{print $2}'
    register: phpversion_out

  - name: set var...
    set_fact:
      phpversion: "php{{ phpversion_out.stdout }}"

  - name: Php opcache
    apt:
      name: "{{phpversion}}-opcache"

  - name: Recursively change ownership of a directory
    file:
      path: "{{path_for_files}}/"
      state: directory
      recurse: yes
      owner: www-data
      group: www-data
      mode: '0755'

  - name: Recursively change ownership of a directory again
    file:
      path:  "{{item}}"
      state: directory
      recurse: yes
      owner: root
      group: root
      mode: '0755'
    with_items:
      - "{{path_for_files}}/wp-admin"
      - "{{path_for_files}}/wp-includes"

  - name: Set www group to debian-h2o
    user:
      name: debian-h2o
      groups: www-data
      append: yes

  - name: Create a new database with name "{{dbname}}"
    mysql_db:
      name: "{{dbname}}"
      state: present

  - name: Create database user with name "{{dbprivuser}}" with all database privileges
    mysql_user:
      name: "{{dbprivuser}}"
      password: "{{dbprivpassword}}"
      priv: '*.*:ALL,GRANT'
      state: present

  - name: Create database user
    mysql_user:
      name: "{{dbuser}}"
      password: "{{dbpassword}}"
      # priv: '*.*:ALL'
      priv: "{{dbname}}.*:ALL"
      state: present

  - name: write the h2o config file
    template:
      src: ./files/h2o.conf.j2
      dest: /etc/h2o/h2o.conf
    notify:
    - restart h2o

  - name: ensure h2o is running
    service:
      name: h2o
      state: started

  - name: ensure h2o is with latest configs
    service:
      name: h2o
      state: restarted

  handlers:
    - name: restart h2o
      service:
        name: h2o
        state: restarted
